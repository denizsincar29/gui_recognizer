#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.4 on Tue Feb 14 14:21:27 2023
#
import dlgs
import stt
from threading import Thread
from webbrowser import open as wopen
import wx
import os

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: govnocode
# end wxGlade

# эта функция будет запущена в потоке, чтобы не мешать обработчику событий

def loop():
	if stt.errorflag:
		dlg = wx.MessageDialog(app.frame, 'ошибка! не удалось сконвертировать в моно')
		wx.OK	
		dlg.ShowModal()
	if not stt.rx.empty():
		state=stt.rx.get()
		if state==[-1, -1]:
			dlgs.progressclose()
			dlg = wx.MessageDialog(app.frame, 'распознавание завершено! Результат сохранён рядом с исполняемым файлом программы в файл "text.txt"')
			wx.OK	
			dlg.ShowModal()
			os.system("start text.txt")
			return
		elif state[0]==-2:
			dlgs.progressstart(app.frame, "идёт транскрибация", "пожалуйста подождите", max=state[1])
		else:
			r=dlgs.progressset(state[0])
			if r is not None and not r[0]:
				stt.tx.put("fuck")
				print("canceled")
				dlgs.progressclose()
	wx.CallLater(50, loop)

class MyFrame(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyFrame.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
		wx.Frame.__init__(self, *args, **kwds)
		self.SetSize((400, 300))
		self.SetTitle(u"транскрибатор")

		# Menu Bar
		self.frame_menubar = wx.MenuBar()
		wxglade_tmp_menu = wx.Menu()
		item = wxglade_tmp_menu.Append(wx.ID_ANY, u"о программе", "")
		self.Bind(wx.EVT_MENU, self.onAbout, item)
		item = wxglade_tmp_menu.Append(wx.ID_ANY, u"выход\tCtrl+q", "")
		self.Bind(wx.EVT_MENU, self.onExit, item)
		item = wxglade_tmp_menu.Append(wx.ID_ANY, u"Справка\tF1", "")
		self.Bind(wx.EVT_MENU, self.tutorial, item)
		self.frame_menubar.Append(wxglade_tmp_menu, u"&Файл")
		self.SetMenuBar(self.frame_menubar)
		# Menu Bar end

		self.panel_1 = wx.Panel(self, wx.ID_ANY)

		sizer_1 = wx.BoxSizer(wx.VERTICAL)

		label_1 = wx.StaticText(self.panel_1, wx.ID_ANY, u"выберете язык", style=wx.ALIGN_CENTER_HORIZONTAL)
		sizer_1.Add(label_1, 0, 0, 0)

		self.choices_label = wx.StaticText(self.panel_1, label='выбирите язык')
		self.language_choice = wx.Choice(self.panel_1, choices=stt.models)
		self.language_choice.SetSelection(0)
		self.language_choice.SetFocus()
		self.select_btn = wx.Button(self.panel_1, label='Скачать языки для распознавания')
		self.Bind(wx.EVT_BUTTON, self.on_select_btn, self.select_btn)


		sizer_1.Add(self.language_choice, 0, 0, 0)

		self.button_1 = wx.Button(self.panel_1, wx.ID_ANY, u"выбрать файл для транскрибирования")
		sizer_1.Add(self.button_1, 0, 0, 0)

		self.button_2 = wx.Button(self.panel_1, wx.ID_ANY, u"транскрибировать")
		sizer_1.Add(self.button_2, 0, 0, 0)

		self.panel_1.SetSizer(sizer_1)

		self.Layout()
		self.Centre()

		self.Bind(wx.EVT_BUTTON, self.onFile_open, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.onTranscrybe, self.button_2)
		# end wxGlade
		self.audio_path=""
		self.max=0

	def onFile_open(self, event):  # wxGlade: MyFrame.<event_handler>
		with wx.FileDialog(self, "Открыть файл...", style=wx.FD_OPEN | wx.FD_FILE_MUST_EXIST) as fileDialog:
			if fileDialog.ShowModal() == wx.ID_CANCEL:
				return
			self.audio_path = fileDialog.GetPath()
			print(self.audio_path)

	def onAbout(self, event):  # wxGlade: MyFrame.<event_handler>
		dlg = wx.MessageDialog(self,'Эта программа предназначена для распознавания из аудиофайлов с разговором в текст. Например, у вас есть аудиокнига, и вам нужно её перевести в текстовый формат.')
		# только пожалуйста, не суйте в программу библию или войну и мир, иначе повиснет и даже через диспетчер не выбьете.
		wx.OK
		dlg.ShowModal()
		return
		event.Skip()

	def onExit(self, event):  # wxGlade: MyFrame.<event_handler>
		stt.tx.put("fuck") # даём команду на остановку потока. и ждём, пока поток прочитает команду fuck!
		self.Close()
		event.Skip()

	def tutorial(self, event):  # wxGlade: MyFrame.<event_handler>
		os.system("start help.htm")

	def onTranscrybe(self, event):  # wxGlade: MyFrame.<event_handler>
		# сначала запускаем поток, а потом диалог. таким образом транскрибация начнётся сразу.
		selected_item_index = self.language_choice.GetSelection()
		language = self.language_choice.GetString(selected_item_index)
		if not os.path.exists(self.audio_path):
			dlg = wx.MessageDialog(self,'вы не выбрали файл или его не существует!')
			wx.OK
			dlg.ShowModal()
			return
		if not stt.transcribe(self.audio_path, language):
			dlg = wx.MessageDialog(self,'распознавание ещё идёт.')
			wx.OK
			dlg.ShowModal()
		# event.Skip()



# строим объекты и модель распознавания
	def on_select_btn(self, event):
		wopen("https://alphacephei.com/vosk/models")
		event.Skip()


# end of class MyFrame

class MyApp(wx.App):
	def OnInit(self):
		self.frame = MyFrame(None, wx.ID_ANY, "")
		self.SetTopWindow(self.frame)
		self.frame.Show()
		wx.CallAfter(loop)
		return True

# end of class MyApp

if __name__ == "__main__":
	app = MyApp(0)
	#mainthr=Thread(target=loop, daemon=True)
	# демон поток, это тот, который закрывается при завершении программы
	#mainthr.start()
	app.MainLoop()
